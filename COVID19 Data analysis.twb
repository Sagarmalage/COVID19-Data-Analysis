<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0624.2136                               -->
<workbook original-version='18.1' source-build='2022.2.0 (20222.22.0624.2136)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Covid  dataset to work on tableau' inline='true' name='federated.008swp31loc5yu1e15pbd17emhxr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Covid  dataset to work on tableau' name='textscan.0ky2ekq1ngivto1974yh614hb7zv'>
            <connection class='textscan' directory='C:/Users/HP/Desktop/Data Science/Tableau' filename='Covid  dataset to work on tableau.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0ky2ekq1ngivto1974yh614hb7zv' name='Covid  dataset to work on tableau.csv' table='[Covid  dataset to work on tableau#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='integer' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='integer' name='total_deaths' ordinal='7' />
            <column datatype='integer' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='string' name='icu_patients' ordinal='17' />
            <column datatype='string' name='icu_patients_per_million' ordinal='18' />
            <column datatype='string' name='hosp_patients' ordinal='19' />
            <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='integer' name='new_tests' ordinal='25' />
            <column datatype='integer' name='total_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='positive_rate' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='integer' name='total_vaccinations' ordinal='34' />
            <column datatype='integer' name='people_vaccinated' ordinal='35' />
            <column datatype='integer' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='integer' name='new_vaccinations' ordinal='37' />
            <column datatype='integer' name='new_vaccinations_smoothed' ordinal='38' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='42' />
            <column datatype='real' name='stringency_index' ordinal='43' />
            <column datatype='integer' name='population' ordinal='44' />
            <column datatype='real' name='population_density' ordinal='45' />
            <column datatype='real' name='median_age' ordinal='46' />
            <column datatype='real' name='aged_65_older' ordinal='47' />
            <column datatype='real' name='aged_70_older' ordinal='48' />
            <column datatype='real' name='gdp_per_capita' ordinal='49' />
            <column datatype='real' name='extreme_poverty' ordinal='50' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
            <column datatype='real' name='diabetes_prevalence' ordinal='52' />
            <column datatype='real' name='female_smokers' ordinal='53' />
            <column datatype='real' name='male_smokers' ordinal='54' />
            <column datatype='real' name='handwashing_facilities' ordinal='55' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
            <column datatype='real' name='life_expectancy' ordinal='57' />
            <column datatype='real' name='human_development_index' ordinal='58' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0ky2ekq1ngivto1974yh614hb7zv' name='Covid  dataset to work on tableau.csv' table='[Covid  dataset to work on tableau#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='integer' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='integer' name='total_deaths' ordinal='7' />
            <column datatype='integer' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='string' name='icu_patients' ordinal='17' />
            <column datatype='string' name='icu_patients_per_million' ordinal='18' />
            <column datatype='string' name='hosp_patients' ordinal='19' />
            <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='integer' name='new_tests' ordinal='25' />
            <column datatype='integer' name='total_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='positive_rate' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='integer' name='total_vaccinations' ordinal='34' />
            <column datatype='integer' name='people_vaccinated' ordinal='35' />
            <column datatype='integer' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='integer' name='new_vaccinations' ordinal='37' />
            <column datatype='integer' name='new_vaccinations_smoothed' ordinal='38' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='42' />
            <column datatype='real' name='stringency_index' ordinal='43' />
            <column datatype='integer' name='population' ordinal='44' />
            <column datatype='real' name='population_density' ordinal='45' />
            <column datatype='real' name='median_age' ordinal='46' />
            <column datatype='real' name='aged_65_older' ordinal='47' />
            <column datatype='real' name='aged_70_older' ordinal='48' />
            <column datatype='real' name='gdp_per_capita' ordinal='49' />
            <column datatype='real' name='extreme_poverty' ordinal='50' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
            <column datatype='real' name='diabetes_prevalence' ordinal='52' />
            <column datatype='real' name='female_smokers' ordinal='53' />
            <column datatype='real' name='male_smokers' ordinal='54' />
            <column datatype='real' name='handwashing_facilities' ordinal='55' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
            <column datatype='real' name='life_expectancy' ordinal='57' />
            <column datatype='real' name='human_development_index' ordinal='58' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[Covid  dataset to work on tableau.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Covid  dataset to work on tableau.csv' datatype='table' name='[__tableau_internal_object_id__].[Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='string' name='[hosp_patients]' role='dimension' type='nominal' />
      <column caption='Hosp Patients Per Million' datatype='string' name='[hosp_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='string' name='[icu_patients]' role='dimension' type='nominal' />
      <column caption='Icu Patients Per Million' datatype='string' name='[icu_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='integer' name='[new_tests]' role='measure' type='quantitative' />
      <column caption='New Tests Per Thousand' datatype='real' name='[new_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed' datatype='integer' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Vaccinations' datatype='integer' name='[new_vaccinations]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed' datatype='integer' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='integer' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated' datatype='integer' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='integer' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations' datatype='integer' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions' datatype='string' name='[weekly_hosp_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Hosp Admissions Per Million' datatype='string' name='[weekly_hosp_admissions_per_million]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions' datatype='string' name='[weekly_icu_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions Per Million' datatype='string' name='[weekly_icu_admissions_per_million]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Covid  dataset to work on tableau.csv' id='Covid  dataset to work on tableau.csv_3CFEBB58299942699E9E2FB02F128B5E'>
            <properties context=''>
              <relation connection='textscan.0ky2ekq1ngivto1974yh614hb7zv' name='Covid  dataset to work on tableau.csv' table='[Covid  dataset to work on tableau#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='integer' name='total_cases' ordinal='4' />
                  <column datatype='integer' name='new_cases' ordinal='5' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='6' />
                  <column datatype='integer' name='total_deaths' ordinal='7' />
                  <column datatype='integer' name='new_deaths' ordinal='8' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
                  <column datatype='real' name='total_cases_per_million' ordinal='10' />
                  <column datatype='real' name='new_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='13' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
                  <column datatype='real' name='reproduction_rate' ordinal='16' />
                  <column datatype='string' name='icu_patients' ordinal='17' />
                  <column datatype='string' name='icu_patients_per_million' ordinal='18' />
                  <column datatype='string' name='hosp_patients' ordinal='19' />
                  <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
                  <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
                  <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
                  <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
                  <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
                  <column datatype='integer' name='new_tests' ordinal='25' />
                  <column datatype='integer' name='total_tests' ordinal='26' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
                  <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
                  <column datatype='integer' name='new_tests_smoothed' ordinal='29' />
                  <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
                  <column datatype='real' name='positive_rate' ordinal='31' />
                  <column datatype='real' name='tests_per_case' ordinal='32' />
                  <column datatype='string' name='tests_units' ordinal='33' />
                  <column datatype='integer' name='total_vaccinations' ordinal='34' />
                  <column datatype='integer' name='people_vaccinated' ordinal='35' />
                  <column datatype='integer' name='people_fully_vaccinated' ordinal='36' />
                  <column datatype='integer' name='new_vaccinations' ordinal='37' />
                  <column datatype='integer' name='new_vaccinations_smoothed' ordinal='38' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
                  <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='42' />
                  <column datatype='real' name='stringency_index' ordinal='43' />
                  <column datatype='integer' name='population' ordinal='44' />
                  <column datatype='real' name='population_density' ordinal='45' />
                  <column datatype='real' name='median_age' ordinal='46' />
                  <column datatype='real' name='aged_65_older' ordinal='47' />
                  <column datatype='real' name='aged_70_older' ordinal='48' />
                  <column datatype='real' name='gdp_per_capita' ordinal='49' />
                  <column datatype='real' name='extreme_poverty' ordinal='50' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='52' />
                  <column datatype='real' name='female_smokers' ordinal='53' />
                  <column datatype='real' name='male_smokers' ordinal='54' />
                  <column datatype='real' name='handwashing_facilities' ordinal='55' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
                  <column datatype='real' name='life_expectancy' ordinal='57' />
                  <column datatype='real' name='human_development_index' ordinal='58' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid  dataset to work on tableau' name='federated.008swp31loc5yu1e15pbd17emhxr' />
          </datasources>
          <datasource-dependencies datasource='federated.008swp31loc5yu1e15pbd17emhxr'>
            <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases_per_million]' derivation='Sum' name='[sum:new_cases_per_million:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.008swp31loc5yu1e15pbd17emhxr].[none:location:nk]'>
            <groupfilter expression='SUM([aged_65_older]) &gt; 20000.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                <groupfilter function='level-members' level='[none:location:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Anguilla&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Bermuda&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Cayman Islands&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Faeroe Islands&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Falkland Islands&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Gibraltar&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Greenland&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Guernsey&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;International&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Isle of Man&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Jersey&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Macao&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Montserrat&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Northern Cyprus&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Saint Helena&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='&quot;Turks and Caicos Islands&quot;' />
                  <groupfilter function='member' level='[none:location:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.008swp31loc5yu1e15pbd17emhxr].[sum:new_cases_per_million:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.008swp31loc5yu1e15pbd17emhxr].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.008swp31loc5yu1e15pbd17emhxr].[sum:new_cases_per_million:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.008swp31loc5yu1e15pbd17emhxr].[sum:new_cases_per_million:qk]</column>
            <column>[federated.008swp31loc5yu1e15pbd17emhxr].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.008swp31loc5yu1e15pbd17emhxr].[none:location:nk]</rows>
        <cols>[federated.008swp31loc5yu1e15pbd17emhxr].[sum:new_cases_per_million:qk]</cols>
      </table>
      <simple-id uuid='{B33EB0CA-863B-441F-8E77-47A7B9A6D859}' />
    </worksheet>
    <worksheet name='Sum of total Deaths each location'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='18'>Sum of total Deaths each location</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid  dataset to work on tableau' name='federated.008swp31loc5yu1e15pbd17emhxr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.008swp31loc5yu1e15pbd17emhxr'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[pcto:sum:total_deaths:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.008swp31loc5yu1e15pbd17emhxr].[location]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.008swp31loc5yu1e15pbd17emhxr].[Longitude (generated)]' field-type='quantitative' max='74176781.220511734' min='-63815903.801555298' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.008swp31loc5yu1e15pbd17emhxr].[Latitude (generated)]' field-type='quantitative' max='12753927.760832846' min='-16832706.450464401' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.008swp31loc5yu1e15pbd17emhxr].[pcto:sum:total_deaths:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ae070a</color>
                <color>#b11619</color>
                <color>#b52729</color>
                <color>#b9383a</color>
                <color>#bd494b</color>
                <color>#c15c5e</color>
                <color>#c56f70</color>
                <color>#c98384</color>
                <color>#cd9798</color>
                <color>#d1acad</color>
                <color>#d5c2c2</color>
                <color>#d9d9d9</color>
                <color>#99d788</color>
                <color>#88cd7a</color>
                <color>#7bc26f</color>
                <color>#6fb663</color>
                <color>#64ab59</color>
                <color>#57a153</color>
                <color>#499550</color>
                <color>#3b8a4a</color>
                <color>#2d7f42</color>
                <color>#27753d</color>
                <color>#24693d</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.008swp31loc5yu1e15pbd17emhxr].[none:location:nk]' />
              <color column='[federated.008swp31loc5yu1e15pbd17emhxr].[pcto:sum:total_deaths:qk]' />
              <geometry column='[federated.008swp31loc5yu1e15pbd17emhxr].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.008swp31loc5yu1e15pbd17emhxr].[Latitude (generated)]</rows>
        <cols>[federated.008swp31loc5yu1e15pbd17emhxr].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9069ED01-01F2-49BC-940B-682270AAAD50}' />
    </worksheet>
    <worksheet name='Total Number of Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='18'>Total number of cases location wise</run>
            <run>Æ&#10;</run>
            <run bold='true' fontsize='18'><![CDATA[<[federated.008swp31loc5yu1e15pbd17emhxr].[sum:total_cases:qk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid  dataset to work on tableau' name='federated.008swp31loc5yu1e15pbd17emhxr' />
          </datasources>
          <datasource-dependencies datasource='federated.008swp31loc5yu1e15pbd17emhxr'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.008swp31loc5yu1e15pbd17emhxr].[none:location:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:location:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;Africa&quot;' />
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;Asia&quot;' />
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;Australia&quot;' />
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;Europe&quot;' />
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;North America&quot;' />
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;South America&quot;' />
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;World&quot;' />
                    <groupfilter function='member' level='[none:location:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.008swp31loc5yu1e15pbd17emhxr].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.008swp31loc5yu1e15pbd17emhxr].[sum:total_cases:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.008swp31loc5yu1e15pbd17emhxr].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.008swp31loc5yu1e15pbd17emhxr].[sum:total_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.008swp31loc5yu1e15pbd17emhxr].[sum:total_cases:qk]</rows>
        <cols>[federated.008swp31loc5yu1e15pbd17emhxr].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{B877E080-B0B2-4A96-B8E8-B3662D88CDA1}' />
    </worksheet>
    <worksheet name='Vaccination Tracker Among the complete population'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='18'>Vaccination Tracker Among the complete population</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid  dataset to work on tableau' name='federated.008swp31loc5yu1e15pbd17emhxr' />
          </datasources>
          <datasource-dependencies datasource='federated.008swp31loc5yu1e15pbd17emhxr'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='People Fully Vaccinated' datatype='integer' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
            <column caption='People Vaccinated' datatype='integer' name='[people_vaccinated]' role='measure' type='quantitative' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[people_fully_vaccinated]' derivation='Sum' name='[sum:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[people_vaccinated]' derivation='Sum' name='[sum:people_vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.008swp31loc5yu1e15pbd17emhxr].[none:location:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.008swp31loc5yu1e15pbd17emhxr].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.008swp31loc5yu1e15pbd17emhxr].[sum:people_vaccinated:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.008swp31loc5yu1e15pbd17emhxr].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.008swp31loc5yu1e15pbd17emhxr].[sum:people_fully_vaccinated:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.008swp31loc5yu1e15pbd17emhxr].[sum:people_fully_vaccinated:qk]' />
              <text column='[federated.008swp31loc5yu1e15pbd17emhxr].[sum:population:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.008swp31loc5yu1e15pbd17emhxr].[none:location:nk]</rows>
        <cols>[federated.008swp31loc5yu1e15pbd17emhxr].[sum:people_vaccinated:qk]</cols>
      </table>
      <simple-id uuid='{C2FE9B75-7B1A-4DDA-9C7C-532699793401}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='COVID Data Information'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='11' param='horz' type-v2='layout-flow' w='99138' x='431' y='929'>
            <zone h='98142' id='8' param='horz' type-v2='layout-flow' w='99138' x='431' y='929'>
              <zone fixed-size='892' h='98142' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='99138' x='431' y='929' />
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='43786' id='3' name='Total Number of Cases' w='49395' x='0' y='55401' />
        <zone h='33333' id='5' name='Vaccination Tracker Among the complete population' w='46429' x='53148' y='64344'>
          <layout-cache type-h='fixed' type-w='fixed' />
        </zone>
        <zone h='50523' id='9' name='Sum of total Deaths each location' w='94992' x='592' y='1858'>
          <layout-cache minheight='257' type-h='scalable' type-w='fixed' />
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='16' param='vert' type-v2='layout-flow' w='99138' x='431' y='929'>
                <zone fixed-size='280' h='50523' id='9' is-fixed='true' name='Sum of total Deaths each location' w='94992' x='592' y='1858'>
                  <layout-cache minheight='257' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43786' id='3' is-fixed='true' name='Total Number of Cases' w='49395' x='0' y='55401'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='33333' id='5' is-fixed='true' name='Vaccination Tracker Among the complete population' w='46429' x='53148' y='64344'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5E802C8D-1DD4-4B3A-9C65-FDBA9DF06BEE}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' show-side-pane='false' source-height='37'>
    <window class='worksheet' name='Total Number of Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.008swp31loc5yu1e15pbd17emhxr].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8689D8EA-6903-4C61-A98C-A141ECB73D8F}' />
    </window>
    <window class='worksheet' name='Sum of total Deaths each location'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.008swp31loc5yu1e15pbd17emhxr].[pcto:sum:total_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.008swp31loc5yu1e15pbd17emhxr].[none:continent:nk]</field>
            <field>[federated.008swp31loc5yu1e15pbd17emhxr].[none:location:nk]</field>
            <field>[federated.008swp31loc5yu1e15pbd17emhxr].[pcto:sum:total_deaths:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C49D2208-3FD7-4D29-B8BB-73D5DFBD15C1}' />
    </window>
    <window class='worksheet' name='Vaccination Tracker Among the complete population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.008swp31loc5yu1e15pbd17emhxr].[sum:people_fully_vaccinated:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.008swp31loc5yu1e15pbd17emhxr].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9F7CBDC7-A6E6-472D-8EE9-EF584FCA04E1}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.008swp31loc5yu1e15pbd17emhxr].[sum:new_cases_per_million:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.008swp31loc5yu1e15pbd17emhxr].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F53F506E-BD7F-4856-B5FD-7485F4B668DE}' />
    </window>
    <window class='dashboard' maximized='true' name='COVID Data Information'>
      <viewpoints>
        <viewpoint name='Sum of total Deaths each location'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Number of Cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Vaccination Tracker Among the complete population' />
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{E9B17998-5F36-435B-9D79-7A72B5506852}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='COVID Data Information' width='192'>
      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
      5DAkHRoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sum of total Deaths each location' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Number of Cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Vaccination Tracker Among the complete population' width='192'>
      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
      TkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
